import numpy as np
import pandas as pd 
import scipy as sp 
import os 
import errno
import matplotlib as mpl
from scipy.stats import ttest_ind
from pandas import Series, DataFrame
from matplotlib import pyplot as plt
from matplotlib import style
from scipy import stats
from matplotlib import rcParams
from ast import literal_eval
import matplotlib.pyplot as plt
import math
import glob
from mpl_toolkits.mplot3d import Axes3D
from matplotlib import cm
from matplotlib.ticker import LinearLocator, FormatStrFormatter
# import statsmodels.api as sm
from operator import itemgetter
 
#global variables at top
input_dir ='data\\'
 
current_working_dir = os.getcwd()
 
RADIUS = 32 #pixels
 
SMALL_ABS_SEP  = 32
LARGE_ABS_SEP  = 44
ZERO_PEN       = 0
SMALL_PEN      = -1
LARGE_PEN      = -5
MULT_SMALL_PEN = -3
MULT_LARGE_PEN = -15
REWARD      = 1
MULT_REWARD = 3
 
SEP_DISTS = [32, -32, 44, -44]
PEN_VALS  = [0, 1, 3, 5, 15]
SEP_DIST_MAGS = [32, 44]
 
#a number coding scheme for storing and referencing condition of each trial in standardized test_frame
ZERO_SMALL       = 0
ZERO_LARGE       = 1
SMALL_SMALL      = 2
SMALL_LARGE      = 3
MULT_SMALL_SMALL = 4
MULT_SMALL_LARGE = 5
LARGE_SMALL      = 6
LARGE_LARGE      = 7
MULT_LARGE_SMALL = 8
MULT_LARGE_LARGE = 9
 
TARG_POS      = [0, 0]
PEN_POS_SMALL = [-32, 0]
PEN_POS_LARGE = [-44, 0]

OUTER_PEN_LIM_LARGE = -76
OUTER_PEN_LIM_SMALL = -64
OUTER_REW_LIM       = 32

SIM_GRID_HORIZ_MAX  = OUTER_REW_LIM + 5 #5 pixels past outer rew limit
SIM_GRID_HORIZ_MIN_LARGE  = OUTER_PEN_LIM_LARGE - 5 #5 pixels past large outer pen limit 
SIM_GRID_HORIZ_MIN_SMALL  = OUTER_PEN_LIM_SMALL - 5 #5 pixels past small outer pen limit 

LARGE_GRID_WIDTH = 118
SMALL_GRID_WIDTH = 106

SIM_GRID_VERT_MAX_LARGE = LARGE_GRID_WIDTH/2
SIM_GRID_VERT_MIN_LARGE = -LARGE_GRID_WIDTH/2

SIM_GRID_VERT_MAX_SMALL = SMALL_GRID_WIDTH/2
SIM_GRID_VERT_MIN_SMALL = -SMALL_GRID_WIDTH/2

SIM_GRID_VERT_MAX   = 50 #[-20, -15, -10, -5 , 0, 5 , 10, 15, 20, 30, 35]
CONDITION_CODES = [ZERO_SMALL, ZERO_LARGE, SMALL_SMALL, SMALL_LARGE, MULT_SMALL_SMALL, MULT_SMALL_LARGE, LARGE_SMALL, LARGE_LARGE, MULT_LARGE_SMALL, MULT_LARGE_LARGE]

#true if the separation distance is small for this trial
SMALL_SEP_COND_BOOL = ZERO_SMALL or SMALL_SMALL or MULT_SMALL_SMALL or LARGE_SMALL or MULT_LARGE_SMALL
#true if the separation distance is large for this trial
LARGE_SEP_COND_BOOL = ZERO_LARGE or SMALL_LARGE or MULT_SMALL_LARGE or LARGE_LARGE or MULT_LARGE_LARGE
 
#the dimensions of the bounding box presented before each trial, set to equal 10 pixels outside of the configuration
OUT_X_MIN_LARGE  = -76 - 10
OUT_X_MIN_SMALL  = -64 - 10
OUT_X_MIN = -70
OUT_X_MAX  = 32 + 10
OUT_Y_MAX  = 32 + 10
OUT_Y_MIN  = -32 - 10

#the number of pokes to simulate for each aim point in the grid used in get_EV_array(); specifically, the size of the random number set that's generated by stats.norm.rvs()
SIM_POKE_NUM = 100

SIM_GRID_GRAN = 1